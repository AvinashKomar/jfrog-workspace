resources:
  - name: myFirstRepo
    type: GitRepo
    configuration:
      # SCM integration where the repository is located
      gitProvider: github # this will be replaced from values.yml
      # Repository path, including org name/repo name
      path: AvinashKomar/jfrog-workspace # this will be replaced from values.yml
      branches:
        # Specifies which branches will trigger dependent steps
        include: main
      cancelPendingRunsOn:
        newCommit: true

  - name: myBag
    type: PropertyBag
    configuration:
      commitSha: 1
      runID: 1
      
pipelines:

  - name: Mr_AviKom
    configuration:
        environmentVariables:
         readOnly:
          env1: pipe_value1
          env2:
            default: pipe_value2
            description: "This is env2 description"
            values:
              - pipe_value2
              - pipe_value3
              - pipe_value4

    steps:
    - name: first
      type: Bash
      configuration:
        inputResources: 
          - name: myFirstRepo
      execution:
        onExecute:
          - echo "HELLO Avinash.. ONE!!"
          - add_run_variables x=2
          
    - name: second
      type: Bash
      configuration:
        inputSteps:
            - name: first
      execution:
        onExecute:
          - |
              if [ $x -eq 2 ]; then
                echo "$x is valid"
              else
                echo "$x is invalid"
              fi
      
        
    - name: third
      type: Bash
      configuration:
        inputResources: 
          - name: myFirstRepo
      execution:
        onExecute:
          - |
              status="IN_PROGRESS"
              i=1
              while [ "$status" == "IN_PROGRESS" ]; do
                echo "current status $status"
                i=$(( $i + 1 ))
                if [ $i -gt 5 ]; then
                  status="SUCCESS"
                fi
              done

      - name: test_sonar
        type: Bash
        configuration:
          outputResources:
            - name: git_sonar_km_1
            - name: git_sonar_km_2
        execution:
          onExecute:
            - write_output git_sonar_km_1 "coverage=80"
            - write_output git_sonar_km_1 "bugs=2"
            - write_output git_sonar_km_1 "code_smells=4"
            - write_output git_sonar_km_1 "duplicated_lines=10"
            - write_output git_sonar_km_1 "tests=3"
            - write_output git_sonar_km_1 "duplicated_blocks=0"
            - write_output git_sonar_km_1 "ncloc=4000"
            - write_output git_sonar_km_1 "vulnerabilities=2"
            - write_output git_sonar_km_1 "security_hotspots=1"
            # coverage 2
            - write_output git_sonar_km_2 "coverage=85"
            - write_output git_sonar_km_2 "bugs=5"
            - write_output git_sonar_km_2 "code_smells=12"
            - write_output git_sonar_km_2 "duplicated_lines=100"
            - write_output git_sonar_km_2 "tests=8"
            - write_output git_sonar_km_2 "duplicated_blocks=0"
            - write_output git_sonar_km_2 "ncloc=4000"
            - write_output git_sonar_km_2 "vulnerabilities=22"
            - write_output git_sonar_km_2 "security_hotspots=11"
